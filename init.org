#+TITLE: [[https://www.kaggle.com/c/titanic/overview][Titanic]]

* Get the Data
  - Def
    #+BEGIN_SRC python :results output :session init :tangle yes :export code
    import os
    import subprocess

    KAGGEL_CMD = "kaggle competitions download -c titanic"
    LOCAL_DATA_PATH = "./dataset/"

    def fetch_titanic_dataset(download_url=DOWNLOAD_URL, local_data_path=LOCAL_DATA_PATH, replace=False):
      if not os.path.isdir(local_data_path):
        os.mkdir(local_data_path)

      project_root = os.getcwd()
      os.chdir(LOCAL_DATA_PATH)
      subprocess.call(KAGGEL_CMD.split(" "))
      os.chdir(project_root)
    #+END_SRC

    #+RESULTS:

  - Execute
    #+BEGIN_SRC python :results value :session init :tangle yes
    fetch_titanic_dataset()
    #+END_SRC

    #+RESULTS:

* Load Libraries and Data
   #+BEGIN_SRC python :results value :session init :tangle yes
   import pandas as pd
   import numpy as np

   train_data_csv = pd.read_csv(os.path.join(LOCAL_DATA_PATH, "train.csv"))

   from sklearn.preprocessing import LabelEncoder
   #+END_SRC

   #+RESULTS:

* Peek Data
  - head
    #+BEGIN_SRC python :results value :session init :tangle yes
    pd.set_option('display.max_columns', None)
    pd.set_option('display.width', 200)
    train_data_csv.head(10)
    #+END_SRC

    #+RESULTS:
    #+begin_example
       PassengerId  Survived  Pclass                                               Name     Sex   Age  SibSp  Parch            Ticket     Fare Cabin Embarked
    0            1         0       3                            Braund, Mr. Owen Harris    male  22.0      1      0         A/5 21171   7.2500   NaN        S
    1            2         1       1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1      0          PC 17599  71.2833   C85        C
    2            3         1       3                             Heikkinen, Miss. Laina  female  26.0      0      0  STON/O2. 3101282   7.9250   NaN        S
    3            4         1       1       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1      0            113803  53.1000  C123        S
    4            5         0       3                           Allen, Mr. William Henry    male  35.0      0      0            373450   8.0500   NaN        S
    5            6         0       3                                   Moran, Mr. James    male   NaN      0      0            330877   8.4583   NaN        Q
    6            7         0       1                            McCarthy, Mr. Timothy J    male  54.0      0      0             17463  51.8625   E46        S
    7            8         0       3                     Palsson, Master. Gosta Leonard    male   2.0      3      1            349909  21.0750   NaN        S
    8            9         1       3  Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)  female  27.0      0      2            347742  11.1333   NaN        S
    9           10         1       2                Nasser, Mrs. Nicholas (Adele Achem)  female  14.0      1      0            237736  30.0708   NaN        C
    #+end_example

  - info
    #+BEGIN_SRC python :results output :session init :tangle yes
    train_data_csv.info()
    #+END_SRC

    #+RESULTS:
    #+begin_example
    <class 'pandas.core.frame.DataFrame'>
    RangeIndex: 891 entries, 0 to 890
    Data columns (total 12 columns):
    PassengerId    891 non-null int64
    Survived       891 non-null int64
    Pclass         891 non-null int64
    Name           891 non-null object
    Sex            891 non-null object
    Age            714 non-null float64
    SibSp          891 non-null int64
    Parch          891 non-null int64
    Ticket         891 non-null object
    Fare           891 non-null float64
    Cabin          204 non-null object
    Embarked       889 non-null object
    dtypes: float64(2), int64(5), object(5)
    memory usage: 83.6+ KB
    #+end_example

  - Interesting Columns
    - Sex
      #+BEGIN_SRC python :results output :session init :tangle yes
      train_data_csv['Sex'].value_counts()
      #+END_SRC

      #+RESULTS:
      : male      577
      : female    314
      : Name: Sex, dtype: int64

    - Pclass
      #+BEGIN_SRC python :results output :session init :tangle yes
      train_data_csv['Pclass'].value_counts()
      #+END_SRC

      #+RESULTS:
      : 3    491
      : 1    216
      : 2    184
      : Name: Pclass, dtype: int64

  - Describe
    #+BEGIN_SRC python :results output :session init :tangle yes
    train_data_csv.describe()
    #+END_SRC

    #+RESULTS:
    : PassengerId    Survived      Pclass         Age       SibSp       Parch        Fare
    : count   891.000000  891.000000  891.000000  714.000000  891.000000  891.000000  891.000000
    : mean    446.000000    0.383838    2.308642   29.699118    0.523008    0.381594   32.204208
    : std     257.353842    0.486592    0.836071   14.526497    1.102743    0.806057   49.693429
    : min       1.000000    0.000000    1.000000    0.420000    0.000000    0.000000    0.000000
    : 25%     223.500000    0.000000    2.000000   20.125000    0.000000    0.000000    7.910400
    : 50%     446.000000    0.000000    3.000000   28.000000    0.000000    0.000000   14.454200
    : 75%     668.500000    1.000000    3.000000   38.000000    1.000000    0.000000   31.000000
    : max     891.000000    1.000000    3.000000   80.000000    8.000000    6.000000  512.329200

* Preprocessing
  - Preprocessed
    #+BEGIN_SRC python :results output :session init :tangle yes
    preprocessed_data = train_data_csv
    #+END_SRC

    #+RESULTS:
** Remove Unnecessary Columns
   - Name, Ticket
     #+BEGIN_SRC python :results output :session init :tangle yes
     preprocessed_data = preprocessed_data.drop("Name", axis=1)
     preprocessed_data = preprocessed_data.drop("Ticket", axis=1)
     print(preprocessed_data.head())
     #+END_SRC

     #+RESULTS:
     : PassengerId  Survived  Pclass     Sex   Age  SibSp  Parch     Fare Cabin Embarked
     : 0            1         0       3    male  22.0      1      0   7.2500   NaN        S
     : 1            2         1       1  female  38.0      1      0  71.2833   C85        C
     : 2            3         1       3  female  26.0      0      0   7.9250   NaN        S
     : 3            4         1       1  female  35.0      1      0  53.1000  C123        S
     : 4            5         0       3    male  35.0      0      0   8.0500   NaN        S

** Missing Values
   - Cabin
     - Unprocessed Values
       #+BEGIN_SRC python :results output :session init :tangle yes
       preprocessed_data['Cabin'][:100].value_counts()
       #+END_SRC

       #+RESULTS:
       #+begin_example
       C23 C25 C27    2
       C83            1
       C85            1
       C103           1
       C52            1
       D56            1
       B28            1
       G6             1
       B30            1
       A6             1
       A5             1
       D10 D12        1
       D33            1
       F33            1
       B78            1
       E31            1
       E46            1
       F G73          1
       C123           1
       Name: Cabin, dtype: int64
       #+end_example
     - Fill ~X~
       #+BEGIN_SRC python :results output :session init :tangle yes
       preprocessed_data['Cabin'] = preprocessed_data['Cabin'].fillna("X")
       print(preprocessed_data.head(3))
       #+END_SRC

       #+RESULTS:
       : PassengerId  Survived  Pclass     Sex   Age  SibSp  Parch     Fare Cabin Embarked
       : 0            1         0       3    male  22.0      1      0   7.2500     X        S
       : 1            2         1       1  female  38.0      1      0  71.2833   C85        C
       : 2            3         1       3  female  26.0      0      0   7.9250     X        S
   - Age
     #+BEGIN_SRC python :results output :session init :tangle yes
     preprocessed_data["Age"] = preprocessed_data["Age"].fillna(preprocessed_data["Age"].median())
     #+END_SRC

     #+RESULTS:

** Ranges for Age
   #+BEGIN_SRC python :results output :session init :tangle yes
   preprocessed_data["Age"] = np.floor(preprocessed_data['Age'] / 10)
   print(preprocessed_data["Age"].value_counts())
   #+END_SRC

   #+RESULTS:
   #+begin_example
   2.0    397
   3.0    167
   1.0    102
   4.0     89
   0.0     62
   5.0     48
   6.0     19
   7.0      6
   8.0      1
   Name: Age, dtype: int64
   #+end_example

** Encoding
    - Sex
      #+BEGIN_SRC python :results output :session init :tangle yes
      sex_encoder = LabelEncoder()
      preprocessed_data["Sex"] = sex_encoder.fit_transform(preprocessed_data["Sex"])
      print(sex_encoder.classes_)
      #+END_SRC

      #+RESULTS:
      : [0 1]

* Feature Engineering
  - Cabin
    #+BEGIN_SRC python :results output :session init :tangle yes
    train_data_csv.info()
    #+END_SRC
